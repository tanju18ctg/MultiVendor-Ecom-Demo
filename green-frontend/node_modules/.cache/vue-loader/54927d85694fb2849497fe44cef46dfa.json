{"remainingRequest":"C:\\Users\\Black Boss\\Desktop\\project\\green ecommerce\\green-frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Black Boss\\Desktop\\project\\green ecommerce\\green-frontend\\src\\views\\website\\auth\\Register.vue?vue&type=style&index=0&id=22bd87a8&lang=css","dependencies":[{"path":"C:\\Users\\Black Boss\\Desktop\\project\\green ecommerce\\green-frontend\\src\\views\\website\\auth\\Register.vue","mtime":1645552685607},{"path":"C:\\Users\\Black Boss\\Desktop\\project\\green ecommerce\\green-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Black Boss\\Desktop\\project\\green ecommerce\\green-frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Black Boss\\Desktop\\project\\green ecommerce\\green-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Black Boss\\Desktop\\project\\green ecommerce\\green-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Black Boss\\Desktop\\project\\green ecommerce\\green-frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQojYXBwIHsNCiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7DQogIG1heC13aWR0aDogNTAwcHg7DQogIHBhZGRpbmctYm90dG9tOiAxMDBweDsNCn0NCg0KaW5wdXQgew0KICBkaXNwbGF5OiBibG9jazsNCn0NCg0Kc3BhbiB7DQogIGRpc3BsYXk6IGJsb2NrOw0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0KDQpsYWJlbCB7DQogIGRpc3BsYXk6IGJsb2NrOw0KICBtYXJnaW4tdG9wOiAyMHB4Ow0KfQ0KDQpidXR0b24gew0KICBkaXNwbGF5OiBibG9jazsNCiAgbWFyZ2luLXRvcDogMTBweDsNCn0NCg0KYnV0dG9uW3R5cGU9InN1Ym1pdCJdIHsNCiAgbWFyZ2luLXRvcDogMTBweDsNCn0NCg0KZm9ybSB7DQogIHBhZGRpbmc6IDIwcHg7DQogIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOw0KfQ0KDQpwIHsNCiAgZm9udC1zaXplOiAxNHB4Ow0KfQ0K"},{"version":3,"sources":["C:\\Users\\Black Boss\\Desktop\\project\\green ecommerce\\green-frontend\\src\\views\\website\\auth\\Register.vue"],"names":[],"mappings":";AAyLA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;;AAEA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;;AAEA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB;;AAEA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClB;;AAEA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB;;AAEA,EAAE;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB","file":"C:/Users/Black Boss/Desktop/project/green ecommerce/green-frontend/src/views/website/auth/Register.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div>\r\n    <h1>vee-validate form wizard</h1>\r\n    <p>\r\n      This example showcases a simple multi-step form (form wizard), basically\r\n      we use the `handleSubmit` function before moving to the next step, which\r\n      allows us to validate the current step without having to submit the form.\r\n      <br />\r\n      <br />\r\n\r\n      We make use of `v-model` to persist the form values across steps, this is\r\n      because by default vee-validate cleans up field values once they are\r\n      unmounted, `v-model` makes sure we keep their values.\r\n      <br />\r\n      <br />\r\n      For complex forms you should look for a form generator that makes this\r\n      easier to manage.\r\n      <a href=\"https://formvuelate.js.org/\" target=\"_blank\" rel=\"noopener\"\r\n        >Formvuelate</a\r\n      >\r\n      is an excellent library with first-party support for vee-validate\r\n    </p>\r\n\r\n    <Form\r\n      @submit=\"nextStep\"\r\n      :validation-schema=\"currentSchema\"\r\n      v-slot=\"{ handleSubmit }\"\r\n    >\r\n      <template v-if=\"currentStep === 0\">\r\n        <label for=\"name\">Name</label>\r\n        <Field name=\"name\" id=\"name\" v-model=\"formValues.name\" />\r\n        <ErrorMessage name=\"name\" />\r\n\r\n        <label for=\"email\">Email</label>\r\n        <Field\r\n          name=\"email\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          v-model=\"formValues.email\"\r\n        />\r\n        <ErrorMessage name=\"email\" />\r\n      </template>\r\n\r\n      <template v-if=\"currentStep === 1\">\r\n        <label for=\"password\">Password</label>\r\n        <Field\r\n          name=\"password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"formValues.password\"\r\n        />\r\n        <ErrorMessage name=\"password\" />\r\n\r\n        <label for=\"confirmation\">Confirm Password</label>\r\n        <Field\r\n          name=\"confirmPassword\"\r\n          type=\"password\"\r\n          id=\"confirmation\"\r\n          v-model=\"formValues.password\"\r\n        />\r\n        <ErrorMessage name=\"confirmPassword\" />\r\n      </template>\r\n\r\n      <template v-if=\"currentStep === 2\">\r\n        <label for=\"address\">Address</label>\r\n        <Field\r\n          as=\"textarea\"\r\n          name=\"address\"\r\n          id=\"address\"\r\n          v-model=\"formValues.address\"\r\n        />\r\n        <ErrorMessage name=\"address\" />\r\n\r\n        <label for=\"postalCode\">Postal Code</label>\r\n        <Field\r\n          name=\"postalCode\"\r\n          id=\"postalCode\"\r\n          v-model=\"formValues.postalCode\"\r\n        />\r\n        <ErrorMessage name=\"postalCode\" />\r\n      </template>\r\n\r\n      <template v-if=\"currentStep === 3\">\r\n        <label for=\"terms\">Agree to terms and conditions</label>\r\n        <Field\r\n          name=\"terms\"\r\n          type=\"checkbox\"\r\n          id=\"terms\"\r\n          :value=\"true\"\r\n          v-model=\"formValues.terms\"\r\n        />\r\n        <ErrorMessage name=\"terms\" />\r\n      </template>\r\n\r\n      <button v-if=\"currentStep !== 0\" type=\"button\" @click=\"prevStep\">\r\n        Previous\r\n      </button>\r\n\r\n      <button v-if=\"currentStep !== 3\" type=\"submit\">Next</button>\r\n\r\n      <button v-if=\"currentStep === 3\" type=\"submit\">Finish</button>\r\n    </Form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\r\nimport * as yup from \"yup\";\r\nimport { ref, reactive, computed } from \"vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    Form,\r\n    Field,\r\n    ErrorMessage,\r\n  },\r\n  setup: () => {\r\n    const currentStep = ref(0);\r\n    // since vee-validate removes values from the values object once the fields are unmounted\r\n    // we would need to accumlate them manually\r\n    const formValues = reactive({});\r\n\r\n    const schemas = [\r\n      yup.object({\r\n        name: yup.string().required(),\r\n        email: yup.string().required().email(),\r\n      }),\r\n      yup.object({\r\n        password: yup.string().required().min(6),\r\n        confirmPassword: yup\r\n          .string()\r\n          .required()\r\n          .min(6)\r\n          .oneOf([yup.ref(\"password\")], \"Passwords must match\"),\r\n      }),\r\n      yup.object({\r\n        address: yup.string().required(),\r\n        postalCode: yup\r\n          .string()\r\n          .required()\r\n          .matches(/^[0-9]+$/, \"Must be numeric\"),\r\n      }),\r\n      yup.object({\r\n        terms: yup.bool().required().equals([true]),\r\n      }),\r\n    ];\r\n\r\n    const currentSchema = computed(() => {\r\n      return schemas[currentStep.value];\r\n    });\r\n\r\n    function nextStep(values) {\r\n      if (currentStep.value === 3) {\r\n        console.log(\"Done: \", JSON.stringify(formValues, null, 2));\r\n        return;\r\n      }\r\n\r\n      // accumlate the form values with the values from previous steps\r\n      Object.assign(formValues, values);\r\n      console.log(\"Current values: \");\r\n      console.log(JSON.stringify(formValues, null, 2));\r\n      currentStep.value++;\r\n    }\r\n\r\n    function prevStep() {\r\n      if (currentStep.value <= 0) {\r\n        return;\r\n      }\r\n\r\n      currentStep.value--;\r\n    }\r\n\r\n    return {\r\n      currentStep,\r\n      currentSchema,\r\n      prevStep,\r\n      formValues,\r\n      nextStep,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  max-width: 500px;\r\n  padding-bottom: 100px;\r\n}\r\n\r\ninput {\r\n  display: block;\r\n}\r\n\r\nspan {\r\n  display: block;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-top: 20px;\r\n}\r\n\r\nbutton {\r\n  display: block;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  margin-top: 10px;\r\n}\r\n\r\nform {\r\n  padding: 20px;\r\n  border: 1px solid black;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n}\r\n</style>\r\n"]}]}